// Test script for text alignment fix
// This script tests that the summary text is properly aligned without indentation issues

function testTextAlignmentFix() {
  console.log('ðŸ§ª Testing Text Alignment Fix...\n');

  // Test data with potential formatting issues
  const testSummaries = [
    // Summary with leading whitespace (problematic)
    {
      content: `   W kwietniu wydaliÅ›my 246,94 zÅ‚ na kampanie reklamowe, ktÃ³re wygenerowaÅ‚y 8 099 wyÅ›wietleÅ„ i 143 klikniÄ™cia, co daÅ‚o CTR na poziomie 1,77%. Åšredni koszt klikniÄ™cia wyniÃ³sÅ‚ 1,73 zÅ‚. W tym okresie nie zanotowaliÅ›my Å¼adnych konwersji, dlatego CPA wyniÃ³sÅ‚ 0,00 zÅ‚.
Pomimo braku konwersji, dziaÅ‚ania mogÅ‚y przyczyniÄ‡ siÄ™ do zwiÄ™kszenia Å›wiadomoÅ›ci marki oraz potencjalnych kontaktÃ³w offline.`,
      description: 'Summary with leading whitespace'
    },
    // Summary with extra line breaks (problematic)
    {
      content: `

W kwietniu wydaliÅ›my 246,94 zÅ‚ na kampanie reklamowe, ktÃ³re wygenerowaÅ‚y 8 099 wyÅ›wietleÅ„ i 143 klikniÄ™cia, co daÅ‚o CTR na poziomie 1,77%. Åšredni koszt klikniÄ™cia wyniÃ³sÅ‚ 1,73 zÅ‚. W tym okresie nie zanotowaliÅ›my Å¼adnych konwersji, dlatego CPA wyniÃ³sÅ‚ 0,00 zÅ‚.

Pomimo braku konwersji, dziaÅ‚ania mogÅ‚y przyczyniÄ‡ siÄ™ do zwiÄ™kszenia Å›wiadomoÅ›ci marki oraz potencjalnych kontaktÃ³w offline.

`,
      description: 'Summary with extra line breaks'
    },
    // Clean summary (correct)
    {
      content: `W kwietniu wydaliÅ›my 246,94 zÅ‚ na kampanie reklamowe, ktÃ³re wygenerowaÅ‚y 8 099 wyÅ›wietleÅ„ i 143 klikniÄ™cia, co daÅ‚o CTR na poziomie 1,77%. Åšredni koszt klikniÄ™cia wyniÃ³sÅ‚ 1,73 zÅ‚. W tym okresie nie zanotowaliÅ›my Å¼adnych konwersji, dlatego CPA wyniÃ³sÅ‚ 0,00 zÅ‚.
Pomimo braku konwersji, dziaÅ‚ania mogÅ‚y przyczyniÄ‡ siÄ™ do zwiÄ™kszenia Å›wiadomoÅ›ci marki oraz potencjalnych kontaktÃ³w offline.`,
      description: 'Clean summary (correct)'
    }
  ];

  console.log('ðŸ“‹ Testing Summary Formatting:');
  console.log('â”€'.repeat(60));

  testSummaries.forEach((testCase, index) => {
    console.log(`\n${index + 1}. ${testCase.description}:`);
    console.log('â”€'.repeat(40));
    
    // Simulate the component rendering
    const originalContent = testCase.content;
    const trimmedContent = testCase.content.trim();
    
    console.log('Original content length:', originalContent.length);
    console.log('Trimmed content length:', trimmedContent.length);
    console.log('Has leading whitespace:', originalContent !== originalContent.trimStart());
    console.log('Has trailing whitespace:', originalContent !== originalContent.trimEnd());
    
    console.log('\nOriginal (first 50 chars):');
    console.log(`"${originalContent.substring(0, 50)}"`);
    
    console.log('\nTrimmed (first 50 chars):');
    console.log(`"${trimmedContent.substring(0, 50)}"`);
    
    console.log('\nRendered output:');
    console.log('â”€'.repeat(40));
    console.log(trimmedContent);
    console.log('â”€'.repeat(40));
  });

  console.log('\nðŸŽ¯ Expected Results:');
  console.log('âœ… No leading whitespace in rendered text');
  console.log('âœ… No trailing whitespace in rendered text');
  console.log('âœ… Proper left alignment for all lines');
  console.log('âœ… Consistent paragraph formatting');
  console.log('âœ… No extra line breaks at start/end');

  console.log('\nðŸ”§ Fixes Applied:');
  console.log('1. Removed `whitespace-pre-wrap` CSS class');
  console.log('2. Added `.trim()` to summary content');
  console.log('3. Updated prompt to avoid leading whitespace');
  console.log('4. Added explicit formatting instructions');

  console.log('\nâœ… Test completed! The text alignment should now be fixed.');
}

// Run the test
testTextAlignmentFix(); 